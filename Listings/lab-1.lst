A51 MACRO ASSEMBLER  LAB_1                                                                09/20/2023 14:17:08 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\lab-1.obj
ASSEMBLER INVOKED BY: C:\Keil_v5\C51\BIN\A51.EXE lab-1.a51 SET(SMALL) DEBUG PRINT(.\Listings\lab-1.lst) OBJECT(.\Objects
                      \lab-1.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     ; Start
0000                   2             ORG     0000h                   ; (Starting address)
  00C0                 3             P4              EQU 0C0h                ; (Define P4)
                       4     
                       5     
                       6     ; Writing a reference function to external memory
0000 908000            7             MOV             DPTR, #8000h
0003 7408              8             MOV             A, #08h
0005 F0                9             MOVX    @DPTR, A
0006 908008           10             MOV             DPTR, #8008h
0009 7415             11             MOV             A, #15h
000B F0               12             MOVX    @DPTR, A
                      13     
000C 908000           14             MOV             DPTR, #8000h
000F E0               15             MOVX    A, @DPTR
0010 F582             16             MOV             DPL, A
0012 E0               17             MOVX    A, @DPTR
0013 F582             18             MOV             DPL, A
0015 AA82             19             MOV             R2, DPL
                      20             
0017 74E3             21             MOV     A, #0E3h                ; A := 11100011b (The first part of the reference f
                             unction)
0019 F0               22             MOVX    @DPTR, A                ; [DPTR] := A
001A A3               23             INC             DPTR
001B 74C5             24             MOV     A, #0C5h                ; A := 11000101b (The second part of the reference 
                             function)
001D F0               25             MOVX    @DPTR, A                ; [DPTR] := A
                      26             
                      27             
                      28     ; Waiting for permission to start program execution
001E                  29     WAIT:
001E 907FFB           30             MOV             DPTR, #7FFBh
0021 E0               31             MOVX    A, @DPTR
0022 60FA             32             JZ              WAIT    
0024 7800             33             MOV             R0, #00h                ; R0 := 00h
                      34             
                      35             
                      36     ; Iterating through all input values
0026                  37     CYCLE_1:
0026 907FFA           38             MOV             DPTR, #7FFAh
0029 E8               39             MOV             A, R0
002A F0               40             MOVX    @DPTR, A
002B 8820             41             MOV             20h, R0                 ; [20h] := R0 (Loading input values)
                      42             
                      43     ; Calculation of a logical function
002D A201             44             MOV             C, 1                    ; C := [20.1h]
002F B002             45             ANL             C, /2                   ; C := C and ![20.2h]
0031 B003             46             ANL             C, /3                   ; C := C and ![20.3h]
0033 9208             47             MOV             8, C                    ; [21.0h] := C (x1 * !x2 * !x3)
0035 A202             48             MOV             C, 2                    ; C := [20.2h]
0037 B000             49             ANL             C, /0                   ; C := C and ![20.0h]
0039 B001             50             ANL             C, /1                   ; C := C and ![20.1h]
003B 9209             51             MOV             9, C                    ; [21.1h] := C (x2 * !x0 * !x1)
003D A202             52             MOV             C, 2                    ; C := [20.2h]
003F B001             53             ANL             C, /1                   ; C := C and ![20.1h]
0041 8203             54             ANL             C, 3                    ; C := C and [20.3h]
0043 920A             55             MOV             10, C                   ; [21.2h] := C (x2 * !x1 * x3)
A51 MACRO ASSEMBLER  LAB_1                                                                09/20/2023 14:17:08 PAGE     2

0045 A200             56             MOV             C, 0                    ; C := [20.0h]
0047 B002             57             ANL             C, /2                   ; C := C and ![20.2h]
0049 8203             58             ANL             C, 3                    ; C := C and [20.3h] (x0 * !x2 * x3)
004B 7208             59             ORL             C, 8                    ; C := C or [20.4h]
004D 7209             60             ORL             C, 9                    ; C := C or [20.5h]
004F 720A             61             ORL             C, 10                   ; C := C or [20.6h]
0051 9208             62             MOV             8, C                    ; [21.0h] := F
                      63             
                      64     ; Comparison of the obtained result with the reference function
0053 908000           65             MOV             DPTR, #8000h    ;
0056 8A82             66             MOV             DPL, R2
0058 200302           67             JB              3, PTR_1                ; if [20.3h] == 1 then PC := ${PTR_1}
005B 0160             68             AJMP    PTR_2                   ; PC := ${PTR_2}
005D                  69     PTR_1:
005D A3               70             INC             DPTR
005E C203             71             CLR             3
0060                  72     PTR_2:
0060 E0               73             MOVX    A, @DPTR                ; A := [DPTR] (Loading the required part of the ref
                             erence function)
0061 A920             74             MOV             R1, 20h                 ; (Preparing the shift counter)
0063                  75     CYCLE_2:                                        ; Shift cycle
0063 B90002           76             CJNE    R1, #0, PTR_3   ; if R0 != 0 then PC := ${PTR_4}
0066 016C             77             AJMP    PTR_4                   ; PC := ${PTR_5}
0068                  78     PTR_3:
0068 03               79             RR              A                               ; A -> (Right shift)
0069 19               80             DEC             R1                              ; R1 := R1 - 1
006A 0163             81             AJMP    CYCLE_2                 ; PC := ${CYCLE_2}
006C                  82     PTR_4:
                      83     ;       XRL             21h, A                  ; [20h] := [20h] xor A
006C A208             84             MOV             C, 8                    ; C := [20.0h] (Check bit)
006E 92C0             85             MOV             P4.0, C
0070 F521             86             MOV             21h, A
0072 A208             87             MOV             C, 8
0074 92C1             88             MOV             P4.1, C
0076 B80F0A           89             CJNE    R0, #0Fh, PTR_5 ; if R0 != 0Fh then PC := ${PTR_6}
0079 7800             90             MOV             R0, #00h
007B 907FFB           91             MOV             DPTR, #7FFBh
007E 7400             92             MOV             A, #00h
0080 F0               93             MOVX    @DPTR, A
0081 011E             94             AJMP    WAIT                            ; PC := PC (End of programme)
0083                  95     PTR_5:
0083 907FFB           96             MOV             DPTR, #7FFBh
0086 7400             97             MOV             A, #00h
0088 F0               98             MOVX    @DPTR, A
0089 08               99             INC             R0                              ; R0 := R0 + 1 (Next input value)
008A 011E            100             AJMP    WAIT                    ; PC := ${CYCLE_1}
                     101             END                                             ; (End of the program text)
A51 MACRO ASSEMBLER  LAB_1                                                                09/20/2023 14:17:08 PAGE     3

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

CYCLE_1. . . . . .  C ADDR   0026H   A   
CYCLE_2. . . . . .  C ADDR   0063H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
P4 . . . . . . . .  N NUMB   00C0H   A   
PTR_1. . . . . . .  C ADDR   005DH   A   
PTR_2. . . . . . .  C ADDR   0060H   A   
PTR_3. . . . . . .  C ADDR   0068H   A   
PTR_4. . . . . . .  C ADDR   006CH   A   
PTR_5. . . . . . .  C ADDR   0083H   A   
WAIT . . . . . . .  C ADDR   001EH   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
